version: '3.8'
services:
  springboot:
    build:
      context: order-service
      dockerfile: Dockerfile
    depends_on:
      - db-postgres
      - kafka
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-postgres:5432/postgres
      KAFKA_HOST: kafka
    networks:
      - microservicios-saga-coreografia-network
  express:
    build:
      context: payment-service
      dockerfile: Dockerfile
    depends_on:
      - db-mysql
      - kafka
    restart: on-failure
    environment:
      DATABASE_NAME: public
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: mauFJcuf5dhRMQrjj
      DATABASE_HOST: db-mysql
      DATABASE_DIALECT: mysql
      KAFKA_HOST: kafka:9092
      KAFKA_ORDER_CREATED_TOPIC: order-created-topic
      KAFKA_ORDER_GROUP: order-event-group
      KAFKA_PAYMENT_CREATED_TOPIC: payment-created-topic
      KAFKA_PAYMENT_INVALID_TOPIC: payment-invalid-topic
      KAFKA_PAYMENT_GROUP: payment-event-group
    networks:
      - microservicios-saga-coreografia-network
  db-postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    networks:
      - microservicios-saga-coreografia-network
    volumes:
      - db-postgres:/var/lib/postgresql/data
  db-mysql:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=mauFJcuf5dhRMQrjj
      - MYSQL_DATABASE=public
    ports:
      - '3306:3306'
    volumes:
      - db-mysql:/var/lib/mysql
    networks:
      - microservicios-saga-coreografia-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservicios-saga-coreografia-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservicios-saga-coreografia-network
  nginx:
    depends_on:
      - springboot
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    restart: unless-stopped
    networks:
      - microservicios-saga-coreografia-network
networks:
  microservicios-saga-coreografia-network:
    driver: bridge
volumes:
  db-postgres:
    driver: local
  db-mysql:
    driver: local